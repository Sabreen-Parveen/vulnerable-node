name: 🛡️ Scan Docker image latest 🐳

on:
  push:
    branches:
      - master

jobs:
  get_images:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ toJSON(steps.generate-image-matrix.outputs.images) }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Generate Image Matrix
        id: generate-image-matrix
        run: |
          ls
          export images=$(cat ./docker-compose.yml | grep -i "image:" | awk '{print $2}')
          delimiter="$(openssl rand -hex 8)"
          echo "images<<${delimiter}" >> ${GITHUB_OUTPUT}
          echo "${images}" >> ${GITHUB_OUTPUT}
          echo "${delimiter}" >> ${GITHUB_OUTPUT}

          # echo "images=$(cat ./docker-compose.yml | grep -i "image:" | awk '{print $2}')" >> "$GITHUB_OUTPUT"

  scan:
    name: 🛡️ Scan image latest
    runs-on: ubuntu-latest
    needs: get_images
    strategy:
      matrix:
        images: ${{ fromJSON(needs.get_images.outputs.images) }}
    steps:
      - uses: anchore/scan-action@v3
        id: scan
        with:
         image: optnc/domaine-nc-api:latest
         fail-build: true
         severity-cutoff: critical

      - name: get the output
        if: ${{ failure() }}
        run: |
          # x=$(cat ${{ steps.scan.outputs.sarif }} | jq -r '.runs[0].tool.driver.rules[].shortDescription.text') 
          # x=$(echo $x | base64)
          export result=$(cat ${{ steps.scan.outputs.sarif }})
          delimiter="$(openssl rand -hex 8)"
          echo "result<<${delimiter}" >> ${GITHUB_ENV}
          echo "${result}" >> ${GITHUB_ENV}
          echo "${delimiter}" >> ${GITHUB_ENV}
          # echo "result=$(cat ${{ steps.scan.outputs.sarif }} | jq -r '.runs[0].tool.driver.rules[].shortDescription.text')" >> "$GITHUB_ENV"
          # echo result=$(cat ${{ steps.scan.outputs.sarif }} | jq -r '.runs[0].tool.driver.rules[].shortDescription.text') >> $GITHUB_OUTPUT
          # echo $result
 
      - name: Create/Update an issue of vulnerabilities 🛡️ that have been detected
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: true
          script: |
            const { owner, repo } = context.repo;
            const labels = ['security', 'docker-scan', 'Alert : Docker image scan'];

            const body = `Workflow failed for commit ${{github.sha}}.        

            Following vulnerabilities have been detected :
            \`\`\`
            ${{ env.result }}
            \`\`\`
                `;
            console.log(process.env.result);
            console.log(body);

            github.rest.issues.create({
              owner, repo,
              title : '🛡️ Docker image security scan failed 🛡️',
              body,
              labels
            });
