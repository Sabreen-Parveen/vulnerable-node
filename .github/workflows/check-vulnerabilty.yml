name: üõ°Ô∏è Scan Docker images üê≥

on:
  push:
    branches:
      - master
  schedule:
    - cron:  '0 0 * * *'

jobs:
  get_images:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.generate.outputs.myoutput }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Generate Image Matrix
        id: generate
        run: |
          images=($(cat docker-compose.yml | grep -i "image:" | awk '{print $2}'))
          image=$(jq -c -n '$ARGS.positional' --args "${images[@]}")
          echo $image
          # echo "dimages=$(echo $image | jq -R .)" >> $GITHUB_OUTPUT  
          echo "myoutput=$(jq -cn --argjson environments $image '{images: $environments}')" >> $GITHUB_OUTPUT          

  scan:
    name: üõ°Ô∏è Scan images
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      issues: write
    needs: get_images
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get_images.outputs.images) }}
    
    steps:
      - name: scan docker hub images
        uses: anchore/scan-action@v3
        if: ${{ !startsWith( matrix.images, 'ghcr.io' ) }}
        id: scan
        with:
         image: ${{ matrix.images }}
         fail-build: true
         severity-cutoff: critical
         output-format: json

      - name: Pull image from github container registry
        if: ${{ startsWith( matrix.images, 'ghcr.io' ) }}
        id: get-docker-image-layer
        env: 
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $TOKEN | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker pull ${{ matrix.images }}

      - name: scan github container registry images
        uses: anchore/scan-action@v3
        if: ${{ startsWith( matrix.images, 'ghcr.io' ) }}
        id: scan-ghcr
        with:
         image: ${{ matrix.images }}
         fail-build: true
         severity-cutoff: critical
         output-format: json
      
      - name: echo
        if: ${{ failure() }}
        run: |
          ls
          pwd
          find . -name "create-issue.js"  
          find . -name "./results.json"
      
      - uses: actions/checkout@v3
        if: ${{ failure() }}

      - name: echo
        if: ${{ failure() }}
        run: |
          ls
          pwd
          find . -name "create-issue.js"  
          find . -name "./results.json"        

      - name: Create/Update an issue of vulnerabilities üõ°Ô∏è that have been detected
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: true
          script: |
            const script = require('./.github/workflows/create-issue.js')
            const json_file = '${{  steps.scan.outputs.json || steps.scan-ghcr.outputs.json }}'
            await script({github, context, '${{ matrix.images }}', json_file})
