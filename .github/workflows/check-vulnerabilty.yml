name: 🛡️ Scan Docker image latest 🐳

on:
  push:
    branches:
      - master

jobs:
  get_images:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.generate.outputs.myoutput }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Generate Image Matrix
        id: generate
        run: |
          images=($(cat docker-compose.yml | grep -i "image:" | awk '{print $2}'))
          image=$(jq -c -n '$ARGS.positional' --args "${images[@]}")
          echo $image
          # echo "dimages=$(echo $image | jq -R .)" >> $GITHUB_OUTPUT  
          echo "myoutput=$(jq -cn --argjson environments $image '{images: $environments}')" >> $GITHUB_OUTPUT          

  # my_echo:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - get_images
  #   steps:
  #     - name: Echo previous outputs
  #       run: echo "${{ toJSON(needs.get_images.outputs.images) }}"

  scan:
    name: 🛡️ Scan image latest
    runs-on: ubuntu-latest
    needs: get_images
    strategy:
      matrix: ${{ fromJSON(needs.get_images.outputs.images) }}
    steps:
      - uses: anchore/scan-action@v3
        id: scan
        with:
         image: ${{ matrix.images }}
         fail-build: true
         severity-cutoff: critical
      - name: Create/Update an issue of vulnerabilities 🛡️ that have been detected
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: true
          script: |
            const fs = require('fs');
          
            const data = fs.readFileSync(`${{ steps.scan.outputs.sarif }}`, 'utf8');


            const { owner, repo } = context.repo;
            const labels = ['security', 'docker-scan', 'Alert : Docker image scan'];

            const body = `Workflow failed for commit ${{github.sha}}.        

            Following vulnerabilities have been detected in image ${{ matrix.images }}:
                `;

            const issueBody = `Workflow failed for commit ${{github.sha}}.        

            Following vulnerabilities have been detected in image:
            \`\`\`
            ${data}
            \`\`\`
                `;

            const response = await github.rest.issues.create({
              owner, repo,
              title : '🛡️ Docker image security scan failed 🛡️',
              body,
              labels
            });

            console.log(response)
            # github.rest.issues.createComment({
            #   issue_number: response.id
            #   owner, repo,
            #   body: issueBody
            # });


